# Python stubs generated by omniidl from idl/Simulator.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)

# #include "BasicDataType.idl"
import BasicDataType_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")
# #include "ExtendedDataTypes.idl"
import ExtendedDataTypes_idl
_0_RTC = omniORB.openModule("RTC")
_0_RTC__POA = omniORB.openModule("RTC__POA")

#
# Start of module "ssr"
#
__name__ = "ssr"
_0_ssr = omniORB.openModule("ssr", r"idl/Simulator.idl")
_0_ssr__POA = omniORB.openModule("ssr__POA", r"idl/Simulator.idl")


# enum RETURN_VALUE
_0_ssr.RETVAL_OK = omniORB.EnumItem("RETVAL_OK", 0)
_0_ssr.RETVAL_INVALID_PRECONDITION = omniORB.EnumItem("RETVAL_INVALID_PRECONDITION", 1)
_0_ssr.RETVAL_OBJECT_NOT_FOUND = omniORB.EnumItem("RETVAL_OBJECT_NOT_FOUND", 2)
_0_ssr.RETVAL_NOT_IMPLEMENTED = omniORB.EnumItem("RETVAL_NOT_IMPLEMENTED", 3)
_0_ssr.RETVAL_UNKNOWN_ERROR = omniORB.EnumItem("RETVAL_UNKNOWN_ERROR", 4)
_0_ssr.RETURN_VALUE = omniORB.Enum("IDL:ssr/RETURN_VALUE:1.0", (_0_ssr.RETVAL_OK, _0_ssr.RETVAL_INVALID_PRECONDITION, _0_ssr.RETVAL_OBJECT_NOT_FOUND, _0_ssr.RETVAL_NOT_IMPLEMENTED, _0_ssr.RETVAL_UNKNOWN_ERROR,))

_0_ssr._d_RETURN_VALUE  = (omniORB.tcInternal.tv_enum, _0_ssr.RETURN_VALUE._NP_RepositoryId, "RETURN_VALUE", _0_ssr.RETURN_VALUE._items)
_0_ssr._tc_RETURN_VALUE = omniORB.tcInternal.createTypeCode(_0_ssr._d_RETURN_VALUE)
omniORB.registerType(_0_ssr.RETURN_VALUE._NP_RepositoryId, _0_ssr._d_RETURN_VALUE, _0_ssr._tc_RETURN_VALUE)

# typedef ... OBJECT_HANDLE
class OBJECT_HANDLE:
    _NP_RepositoryId = "IDL:ssr/OBJECT_HANDLE:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_ssr.OBJECT_HANDLE = OBJECT_HANDLE
_0_ssr._d_OBJECT_HANDLE  = omniORB.tcInternal.tv_long
_0_ssr._ad_OBJECT_HANDLE = (omniORB.tcInternal.tv_alias, OBJECT_HANDLE._NP_RepositoryId, "OBJECT_HANDLE", omniORB.tcInternal.tv_long)
_0_ssr._tc_OBJECT_HANDLE = omniORB.tcInternal.createTypeCode(_0_ssr._ad_OBJECT_HANDLE)
omniORB.registerType(OBJECT_HANDLE._NP_RepositoryId, _0_ssr._ad_OBJECT_HANDLE, _0_ssr._tc_OBJECT_HANDLE)
del OBJECT_HANDLE

# typedef ... StringSeq
class StringSeq:
    _NP_RepositoryId = "IDL:ssr/StringSeq:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_ssr.StringSeq = StringSeq
_0_ssr._d_StringSeq  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_ssr._ad_StringSeq = (omniORB.tcInternal.tv_alias, StringSeq._NP_RepositoryId, "StringSeq", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_ssr._tc_StringSeq = omniORB.tcInternal.createTypeCode(_0_ssr._ad_StringSeq)
omniORB.registerType(StringSeq._NP_RepositoryId, _0_ssr._ad_StringSeq, _0_ssr._tc_StringSeq)
del StringSeq

# interface Simulator
_0_ssr._d_Simulator = (omniORB.tcInternal.tv_objref, "IDL:ssr/Simulator:1.0", "Simulator")
omniORB.typeMapping["IDL:ssr/Simulator:1.0"] = _0_ssr._d_Simulator
_0_ssr.Simulator = omniORB.newEmptyClass()
class Simulator :
    _NP_RepositoryId = _0_ssr._d_Simulator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_ssr.Simulator = Simulator
_0_ssr._tc_Simulator = omniORB.tcInternal.createTypeCode(_0_ssr._d_Simulator)
omniORB.registerType(Simulator._NP_RepositoryId, _0_ssr._d_Simulator, _0_ssr._tc_Simulator)

# Simulator operations and attributes
Simulator._d_loadProject = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], ), None)
Simulator._d_start = ((), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], ), None)
Simulator._d_pause = ((), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], ), None)
Simulator._d_resume = ((), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], ), None)
Simulator._d_stop = ((), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], ), None)
Simulator._d_spawnRobotRTC = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], ), None)
Simulator._d_spawnRangeRTC = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], ), None)
Simulator._d_spawnCameraRTC = (((omniORB.tcInternal.tv_string,0), (omniORB.tcInternal.tv_string,0)), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], ), None)
Simulator._d_killRobotRTC = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], ), None)
Simulator._d_killAllRobotRTC = ((), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], ), None)
Simulator._d_getObjectPose = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], omniORB.typeMapping["IDL:RTC/Pose3D:1.0"]), None)
Simulator._d_setObjectPose = (((omniORB.tcInternal.tv_string,0), omniORB.typeMapping["IDL:RTC/Pose3D:1.0"]), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], ), None)
Simulator._d_synchronizeRTC = (((omniORB.tcInternal.tv_string,0), ), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], ), None)
Simulator._d_getSynchronizingRTCs = ((), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], omniORB.typeMapping["IDL:ssr/StringSeq:1.0"]), None)
Simulator._d_getSimulationTimeStep = ((), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], omniORB.tcInternal.tv_float), None)
Simulator._d_getSimulationTime = ((), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], omniORB.tcInternal.tv_float), None)

# Simulator object reference
class _objref_Simulator (CORBA.Object):
    _NP_RepositoryId = Simulator._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def loadProject(self, *args):
        return _omnipy.invoke(self, "loadProject", _0_ssr.Simulator._d_loadProject, args)

    def start(self, *args):
        return _omnipy.invoke(self, "start", _0_ssr.Simulator._d_start, args)

    def pause(self, *args):
        return _omnipy.invoke(self, "pause", _0_ssr.Simulator._d_pause, args)

    def resume(self, *args):
        return _omnipy.invoke(self, "resume", _0_ssr.Simulator._d_resume, args)

    def stop(self, *args):
        return _omnipy.invoke(self, "stop", _0_ssr.Simulator._d_stop, args)

    def spawnRobotRTC(self, *args):
        return _omnipy.invoke(self, "spawnRobotRTC", _0_ssr.Simulator._d_spawnRobotRTC, args)

    def spawnRangeRTC(self, *args):
        return _omnipy.invoke(self, "spawnRangeRTC", _0_ssr.Simulator._d_spawnRangeRTC, args)

    def spawnCameraRTC(self, *args):
        return _omnipy.invoke(self, "spawnCameraRTC", _0_ssr.Simulator._d_spawnCameraRTC, args)

    def killRobotRTC(self, *args):
        return _omnipy.invoke(self, "killRobotRTC", _0_ssr.Simulator._d_killRobotRTC, args)

    def killAllRobotRTC(self, *args):
        return _omnipy.invoke(self, "killAllRobotRTC", _0_ssr.Simulator._d_killAllRobotRTC, args)

    def getObjectPose(self, *args):
        return _omnipy.invoke(self, "getObjectPose", _0_ssr.Simulator._d_getObjectPose, args)

    def setObjectPose(self, *args):
        return _omnipy.invoke(self, "setObjectPose", _0_ssr.Simulator._d_setObjectPose, args)

    def synchronizeRTC(self, *args):
        return _omnipy.invoke(self, "synchronizeRTC", _0_ssr.Simulator._d_synchronizeRTC, args)

    def getSynchronizingRTCs(self, *args):
        return _omnipy.invoke(self, "getSynchronizingRTCs", _0_ssr.Simulator._d_getSynchronizingRTCs, args)

    def getSimulationTimeStep(self, *args):
        print 'simulator.getSimulationTimeStep : ', args
        return _omnipy.invoke(self, "getSimulationTimeStep", _0_ssr.Simulator._d_getSimulationTimeStep, args)

    def getSimulationTime(self, *args):
        print 'simulator.getSimulationTime : ', args
        return _omnipy.invoke(self, "getSimulationTime", _0_ssr.Simulator._d_getSimulationTime, args)

    __methods__ = ["loadProject", "start", "pause", "resume", "stop", "spawnRobotRTC", "spawnRangeRTC", "spawnCameraRTC", "killRobotRTC", "killAllRobotRTC", "getObjectPose", "setObjectPose", "synchronizeRTC", "getSynchronizingRTCs", "getSimulationTimeStep", "getSimulationTime"] + CORBA.Object.__methods__

omniORB.registerObjref(Simulator._NP_RepositoryId, _objref_Simulator)
_0_ssr._objref_Simulator = _objref_Simulator
del Simulator, _objref_Simulator

# Simulator skeleton
__name__ = "ssr__POA"
class Simulator (PortableServer.Servant):
    _NP_RepositoryId = _0_ssr.Simulator._NP_RepositoryId


    _omni_op_d = {"loadProject": _0_ssr.Simulator._d_loadProject, "start": _0_ssr.Simulator._d_start, "pause": _0_ssr.Simulator._d_pause, "resume": _0_ssr.Simulator._d_resume, "stop": _0_ssr.Simulator._d_stop, "spawnRobotRTC": _0_ssr.Simulator._d_spawnRobotRTC, "spawnRangeRTC": _0_ssr.Simulator._d_spawnRangeRTC, "spawnCameraRTC": _0_ssr.Simulator._d_spawnCameraRTC, "killRobotRTC": _0_ssr.Simulator._d_killRobotRTC, "killAllRobotRTC": _0_ssr.Simulator._d_killAllRobotRTC, "getObjectPose": _0_ssr.Simulator._d_getObjectPose, "setObjectPose": _0_ssr.Simulator._d_setObjectPose, "synchronizeRTC": _0_ssr.Simulator._d_synchronizeRTC, "getSynchronizingRTCs": _0_ssr.Simulator._d_getSynchronizingRTCs, "getSimulationTimeStep": _0_ssr.Simulator._d_getSimulationTimeStep, "getSimulationTime": _0_ssr.Simulator._d_getSimulationTime}

Simulator._omni_skeleton = Simulator
_0_ssr__POA.Simulator = Simulator
omniORB.registerSkeleton(Simulator._NP_RepositoryId, Simulator)
del Simulator
__name__ = "ssr"

# interface SimulatedRobot
_0_ssr._d_SimulatedRobot = (omniORB.tcInternal.tv_objref, "IDL:ssr/SimulatedRobot:1.0", "SimulatedRobot")
omniORB.typeMapping["IDL:ssr/SimulatedRobot:1.0"] = _0_ssr._d_SimulatedRobot
_0_ssr.SimulatedRobot = omniORB.newEmptyClass()
class SimulatedRobot :
    _NP_RepositoryId = _0_ssr._d_SimulatedRobot[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_ssr.SimulatedRobot = SimulatedRobot
_0_ssr._tc_SimulatedRobot = omniORB.tcInternal.createTypeCode(_0_ssr._d_SimulatedRobot)
omniORB.registerType(SimulatedRobot._NP_RepositoryId, _0_ssr._d_SimulatedRobot, _0_ssr._tc_SimulatedRobot)

# SimulatedRobot operations and attributes
SimulatedRobot._d_getJointTagNames = ((), (omniORB.typeMapping["IDL:ssr/RETURN_VALUE:1.0"], omniORB.typeMapping["IDL:ssr/StringSeq:1.0"]), None)

# SimulatedRobot object reference
class _objref_SimulatedRobot (CORBA.Object):
    _NP_RepositoryId = SimulatedRobot._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def getJointTagNames(self, *args):
        return _omnipy.invoke(self, "getJointTagNames", _0_ssr.SimulatedRobot._d_getJointTagNames, args)

    __methods__ = ["getJointTagNames"] + CORBA.Object.__methods__

omniORB.registerObjref(SimulatedRobot._NP_RepositoryId, _objref_SimulatedRobot)
_0_ssr._objref_SimulatedRobot = _objref_SimulatedRobot
del SimulatedRobot, _objref_SimulatedRobot

# SimulatedRobot skeleton
__name__ = "ssr__POA"
class SimulatedRobot (PortableServer.Servant):
    _NP_RepositoryId = _0_ssr.SimulatedRobot._NP_RepositoryId


    _omni_op_d = {"getJointTagNames": _0_ssr.SimulatedRobot._d_getJointTagNames}

SimulatedRobot._omni_skeleton = SimulatedRobot
_0_ssr__POA.SimulatedRobot = SimulatedRobot
omniORB.registerSkeleton(SimulatedRobot._NP_RepositoryId, SimulatedRobot)
del SimulatedRobot
__name__ = "ssr"

#
# End of module "ssr"
#
__name__ = "Simulator_idl"

_exported_modules = ( "ssr", )

# The end.
